'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _plugin = require('@swup/plugin');

var _plugin2 = _interopRequireDefault(_plugin);

var _loadComponents = require('gia/loadComponents');

var _loadComponents2 = _interopRequireDefault(_loadComponents);

var _removeComponents = require('gia/removeComponents');

var _removeComponents2 = _interopRequireDefault(_removeComponents);

var _config = require('gia/config');

var _config2 = _interopRequireDefault(_config);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var GiaPlugin = function (_Plugin) {
	_inherits(GiaPlugin, _Plugin);

	function GiaPlugin(options) {
		_classCallCheck(this, GiaPlugin);

		var _this = _possibleConstructorReturn(this, (GiaPlugin.__proto__ || Object.getPrototypeOf(GiaPlugin)).call(this));

		_this.name = 'GiaPlugin';

		_this.mountComponents = function () {
			var containers = Array.prototype.slice.call(document.querySelectorAll('[data-swup]'));

			containers.forEach(function (container) {
				return (0, _loadComponents2.default)(_this.options.components, container);
			});
		};

		_this.unloadComponents = function () {
			var containers = Array.prototype.slice.call(document.querySelectorAll('[data-swup]'));

			containers.forEach(function (container) {
				return (0, _removeComponents2.default)(container);
			});
		};

		var defaultOptions = {
			components: {},
			firstLoad: true,
			log: false
		};

		_this.options = _extends({}, defaultOptions, options);

		_config2.default.set('log', _this.options.log);
		return _this;
	}

	_createClass(GiaPlugin, [{
		key: 'mount',
		value: function mount() {
			if (this.options.firstLoad) {
				this.mountComponents();
			}

			this.swup.on('contentReplaced', this.mountComponents);
			this.swup.on('willReplaceContent', this.unloadComponents);
		}
	}, {
		key: 'unmount',
		value: function unmount() {
			this.unloadComponents();
			this.swup.off('contentReplaced', this.mountComponents);
			this.swup.off('willReplaceContent', this.unloadComponents);
		}
	}]);

	return GiaPlugin;
}(_plugin2.default);

exports.default = GiaPlugin;