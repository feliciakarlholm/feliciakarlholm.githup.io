{"version":3,"sources":["js/main.js"],"names":["Barba","Pjax","start","FadeTransition","BaseTransition","extend","Promise","all","newContainerLoading","fadeOut","then","fadeIn","bind","$","oldContainer","animate","opacity","promise","_this","$el","newContainer","hide","css","visibility","done","getTransition"],"mappings":"AAAAA,KAAK,CAACC,IAAN,CAAWC,KAAX;AAEA,IAAIC,cAAc,GAAGH,KAAK,CAACI,cAAN,CAAqBC,MAArB,CAA4B;AAC/CH,EAAAA,KAAK,EAAE,iBAAW;AAChB;;;;;AAMA;AACAI,IAAAA,OAAO,CACJC,GADH,CACO,CAAC,KAAKC,mBAAN,EAA2B,KAAKC,OAAL,EAA3B,CADP,EAEGC,IAFH,CAEQ,KAAKC,MAAL,CAAYC,IAAZ,CAAiB,IAAjB,CAFR;AAGD,GAZ8C;AAc/CH,EAAAA,OAAO,EAAE,mBAAW;AAClB;;;AAIA,WAAOI,CAAC,CAAC,KAAKC,YAAN,CAAD,CAAqBC,OAArB,CAA6B;AAAEC,MAAAA,OAAO,EAAE;AAAX,KAA7B,EAA6CC,OAA7C,EAAP;AACD,GApB8C;AAsB/CN,EAAAA,MAAM,EAAE,kBAAW;AACjB;;;;;AAMA,QAAIO,KAAK,GAAG,IAAZ;;AACA,QAAIC,GAAG,GAAGN,CAAC,CAAC,KAAKO,YAAN,CAAX;AAEAP,IAAAA,CAAC,CAAC,KAAKC,YAAN,CAAD,CAAqBO,IAArB;AAEAF,IAAAA,GAAG,CAACG,GAAJ,CAAQ;AACNC,MAAAA,UAAU,EAAG,SADP;AAENP,MAAAA,OAAO,EAAG;AAFJ,KAAR;AAKAG,IAAAA,GAAG,CAACJ,OAAJ,CAAY;AAAEC,MAAAA,OAAO,EAAE;AAAX,KAAZ,EAA4B,GAA5B,EAAiC,YAAW;AAC1C;;;;AAKAE,MAAAA,KAAK,CAACM,IAAN;AACD,KAPD;AAQD;AA/C8C,CAA5B,CAArB;AAkDA;;;;AAIAxB,KAAK,CAACC,IAAN,CAAWwB,aAAX,GAA2B,YAAW;AACpC;;;;AAKA,SAAOtB,cAAP;AACD,CAPD","file":"main.fb6bbcaf.js","sourceRoot":"..","sourcesContent":["Barba.Pjax.start();\n\nvar FadeTransition = Barba.BaseTransition.extend({\n  start: function() {\n    /**\n     * This function is automatically called as soon the Transition starts\n     * this.newContainerLoading is a Promise for the loading of the new container\n     * (Barba.js also comes with an handy Promise polyfill!)\n     */\n\n    // As soon the loading is finished and the old page is faded out, let's fade the new page\n    Promise\n      .all([this.newContainerLoading, this.fadeOut()])\n      .then(this.fadeIn.bind(this));\n  },\n\n  fadeOut: function() {\n    /**\n     * this.oldContainer is the HTMLElement of the old Container\n     */\n\n    return $(this.oldContainer).animate({ opacity: 0 }).promise();\n  },\n\n  fadeIn: function() {\n    /**\n     * this.newContainer is the HTMLElement of the new Container\n     * At this stage newContainer is on the DOM (inside our #barba-container and with visibility: hidden)\n     * Please note, newContainer is available just after newContainerLoading is resolved!\n     */\n\n    var _this = this;\n    var $el = $(this.newContainer);\n\n    $(this.oldContainer).hide();\n\n    $el.css({\n      visibility : 'visible',\n      opacity : 0\n    });\n\n    $el.animate({ opacity: 1 }, 400, function() {\n      /**\n       * Do not forget to call .done() as soon your transition is finished!\n       * .done() will automatically remove from the DOM the old Container\n       */\n\n      _this.done();\n    });\n  }\n});\n\n/**\n * Next step, you have to tell Barba to use the new Transition\n */\n\nBarba.Pjax.getTransition = function() {\n  /**\n   * Here you can use your own logic!\n   * For example you can use different Transition based on the current page or link...\n   */\n\n  return FadeTransition;\n};\n"]}